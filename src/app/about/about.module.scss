@use "../../styles/utilities.scss" as utils;

.main {
  background: var(--surface-base);
  padding-bottom: clamp(4rem, 6vw, 6rem);
}

.hero {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  min-height: 150vh;
  background: var(--surface-base);
  overflow: hidden;
}

.hero::before {
  content: "";
  position: absolute;
  inset: 0;
  height: 100%;
  background: linear-gradient(
    180deg,
    color-mix(in srgb, var(--color-teal-800) 88%, var(--color-graphite-900) 12%) 0%,
    color-mix(in srgb, var(--color-teal-700) 82%, var(--color-graphite-800) 18%) 42%,
    color-mix(in srgb, var(--color-teal-600) 35%, #ffffff 65%) 78%,
    var(--surface-base) 100%
  );
  z-index: -1;
  opacity: 0.9;
}

:global(body.dark) .hero::before {
  background: linear-gradient(
    180deg,
    color-mix(in srgb, var(--color-teal-700) 70%, var(--color-graphite-900) 30%) 0%,
    color-mix(in srgb, var(--color-teal-800) 68%, var(--color-graphite-800) 32%) 48%,
    color-mix(in srgb, var(--color-teal-900) 55%, var(--surface-base) 45%) 78%,
    var(--surface-base) 100%
  );
  opacity: 0.8;
}

.heroAurora {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 0;
  mix-blend-mode: screen;
  opacity: 0.92;
}

:global(body.dark) .heroAurora {
  mix-blend-mode: lighten;
  opacity: 0.85;
}

.heroInner {
  @include utils.section-shell();
  margin-block: 0;
  display: grid;
  gap: clamp(2.5rem, 6vw, 4.5rem);
  align-items: center;
  grid-template-columns: minmax(0, 1fr);
  grid-template-areas:
    "portrait"
    "copy";
  position: relative;
  z-index: 1;
}

.heroCards {
  position: relative;
  z-index: 1;
  @include utils.section-shell($padding-block: 0);
  margin-block-start: clamp(2.75rem, 7vw, 4.25rem);
  margin-block-end: 0;
  padding-block-end: clamp(3.25rem, 9vw, 4.75rem);
  display: grid;
  gap: clamp(1.5rem, 4vw, 2.25rem);
  grid-template-columns: repeat(
    auto-fit,
    minmax(min(16.5rem, 100%), 1fr)
  );
}

.heroCard {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: clamp(0.85rem, 2.4vw, 1.25rem);
  padding: clamp(1.75rem, 4vw, 2.35rem);
  min-height: 100%;
  height: 100%;
}

.heroCardGlyph {
  width: clamp(2.75rem, 6vw, 3.5rem);
  height: clamp(2.75rem, 6vw, 3.5rem);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 1.25rem;
  background: linear-gradient(
    145deg,
    color-mix(in srgb, var(--color-crimson-500) 30%, transparent) 0%,
    color-mix(in srgb, var(--color-teal-400) 60%, transparent) 100%
  );
  color: var(--text-on-inverse);
  font-size: clamp(1.4rem, 3.2vw, 1.8rem);
  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.35),
    0 14px 24px rgba(15, 23, 42, 0.22);
}

.heroCardTitle {
  position: relative;
  font-size: clamp(1.2rem, 3vw, 1.6rem);
  font-weight: 650;
  color: var(--color-teal-900);
  letter-spacing: -0.01em;
}

:global(body.dark) .heroCardTitle {
  color: var(--color-teal-100);
}

.heroCardBody {
  position: relative;
  font-size: clamp(0.98rem, 2.3vw, 1.125rem);
  line-height: 1.65;
  color: color-mix(in srgb, var(--color-graphite-900) 68%, #54606e 32%);
  flex: 1 1 auto;
}

:global(body.dark) .heroCardBody {
  color: color-mix(in srgb, var(--color-teal-50) 80%, var(--color-teal-200) 20%);
}

.heroCopy {
  max-width: 36ch;
  justify-self: start;
  grid-area: copy;
}

.heroPortrait {
  justify-self: center;
  grid-area: portrait;
  max-width: min(19rem, 70vw);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: clamp(1.25rem, 3vw, 1.75rem);
}

.heroBadgeCluster {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: var(--space-sm);
  width: 100%;
  max-width: min(22rem, 100%);
  margin: 0 auto;
}

.eyebrow {
  letter-spacing: 0.32em;
  font-size: var(--font-size-xs);
  color: var(--text-on-inverse);
}

.heroTitle {
  margin-top: clamp(0.75rem, 2vw, 1rem);
  display: inline-flex;
  flex-wrap: wrap;
  align-items: center;
  gap: clamp(0.75rem, 2vw, 1.5rem);
  font-weight: 700;
  color: var(--text-on-inverse);
}

.heroTitleWord {
  display: inline-flex;
  align-items: center;
  gap: clamp(0.4rem, 1vw, 0.7rem);
}

.heroTitleWord::before {
  content: "";
  width: clamp(0.375rem, 1vw, 0.5rem);
  height: clamp(0.375rem, 1vw, 0.5rem);
  border-radius: 50%;
  background: var(--color-crimson-500);
  box-shadow: 0 0 0 1px color-mix(in srgb, var(--color-crimson-500) 55%, transparent);
}

.heroSubhead {
  margin-top: clamp(1.25rem, 3vw, 1.75rem);
  font-size: clamp(1.125rem, 2.6vw, 1.5rem);
  line-height: 1.4;
  color: var(--text-on-inverse);
}

.heroIntro {
  margin-top: clamp(1.25rem, 3.5vw, 2rem);
  font-size: clamp(1rem, 2.4vw, 1.1875rem);
  line-height: 1.7;
  color: var(--text-on-inverse);
}

.heroIntro,
.heroSubhead {
  max-width: 32ch;
}

.portraitFrame {
  --portrait-tilt-x: 0deg;
  --portrait-tilt-y: 0deg;
  --portrait-depth: 24;
  --portrait-light: 0.55;
  --portrait-glow: 0.45;
  transform-style: preserve-3d;
  position: relative;
  border-radius: 1.75rem;
  padding: clamp(0.65rem, 2vw, 0.85rem);
  background: color-mix(in srgb, var(--surface-base) 75%, transparent);
  border: 2px solid color-mix(in srgb, var(--color-crimson-500) 70%, transparent);
  box-shadow: 0 24px 48px rgba(15, 23, 42, 0.22);
  backdrop-filter: blur(6px);
  filter: brightness(calc(0.9 + var(--portrait-light) * 0.12));
  transform: rotateX(var(--portrait-tilt-y)) rotateY(var(--portrait-tilt-x));
  transition:
    transform 0.55s cubic-bezier(0.22, 1, 0.36, 1),
    box-shadow 0.65s ease,
    filter 0.65s ease;
  will-change: transform, filter, box-shadow;
}

:global(body.dark) .portraitFrame {
  background: color-mix(in srgb, var(--surface-base) 55%, transparent);
  box-shadow: 0 24px 54px rgba(0, 0, 0, 0.55);
  filter: brightness(calc(0.92 + var(--portrait-light) * 0.12));
}

.portraitParallax {
  position: relative;
  width: 100%;
  perspective: 1200px;
  perspective-origin: 50% 40%;
}

.portraitMedia {
  position: relative;
  aspect-ratio: 4 / 5;
  border-radius: 1.35rem;
  overflow: hidden;
  transform-style: preserve-3d;
  transform: translateZ(calc(var(--portrait-depth) * 0.45px));
  filter: saturate(1.04) brightness(calc(0.92 + var(--portrait-light) * 0.15));
  transition: filter 0.6s ease;
  z-index: 1;
}

.portraitMedia img {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: cover;
  transform: translateZ(calc(var(--portrait-depth) * 0.2px)) scale(1.01);
}

.portraitBackdrop {
  position: absolute;
  inset: -28%;
  background:
    radial-gradient(
      circle at 50% 32%,
      rgba(64, 226, 210, 0.55) 0%,
      rgba(7, 55, 73, 0.35) 45%,
      rgba(0, 0, 0, 0) 75%
    );
  filter: blur(clamp(2.5rem, 6vw, 4rem));
  opacity: calc(0.32 + var(--portrait-glow) * 0.45);
  transform: translateZ(calc(var(--portrait-depth) * -0.4px));
  mix-blend-mode: screen;
  pointer-events: none;
  z-index: 0;
}

.portraitGlow {
  position: absolute;
  inset: -18%;
  background:
    radial-gradient(
      ellipse at 38% 18%,
      rgba(255, 255, 255, 0.85) 0%,
      rgba(255, 255, 255, 0) 52%
    ),
    radial-gradient(
      ellipse at 72% 82%,
      rgba(255, 112, 176, 0.45) 0%,
      rgba(255, 112, 176, 0) 60%
    );
  filter: blur(clamp(1.35rem, 3.4vw, 2.6rem));
  opacity: calc(0.32 + var(--portrait-glow) * 0.5);
  transform: translateZ(calc(var(--portrait-depth) * -0.25px));
  mix-blend-mode: screen;
  pointer-events: none;
  z-index: 2;
}

@media (min-width: 64rem) {
  .heroInner {
    grid-template-columns: minmax(0, 1.1fr) minmax(0, 0.9fr);
    grid-template-areas: "copy portrait";
    gap: clamp(3rem, 7vw, 6rem);
  }

  .heroPortrait {
    justify-self: end;
    align-self: center;
    margin-top: clamp(1rem, 2vw, 1.5rem);
    max-width: min(20rem, 30vw);
  }

  .heroCopy {
    justify-self: start;
    align-self: center;
  }

  .heroCards {
    margin-top: clamp(3.5rem, 7vw, 5rem);
  }
}

.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.35rem 0.85rem;
  border-radius: 999px;
  font-size: 0.8125rem;
  font-weight: 500;
  background: var(--color-teal-200);
  color: var(--color-teal-900);
  box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--color-teal-900) 20%, transparent);
}

:global(body.dark) .badge {
  background: var(--color-teal-800);
  color: var(--color-teal-100);
  box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--color-teal-100) 25%, transparent);
}

.bodySection {
  @include utils.section-shell($padding-block: 0);
  margin-block-start: clamp(1rem, 2vw, 1.75rem);
  margin-block-end: 0;
}

.biography {
  position: relative;
  z-index: 2;
  color: var(--text-primary);
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  display: flow-root;
  max-width: clamp(72ch, 82ch, 92ch);
  margin-inline: auto;
}

.biographyHeading {
  font-size: clamp(1.5rem, 3vw, 2rem);
  color: var(--color-teal-700);
  margin-bottom: var(--space-lg);
}

:global(body.dark) .biographyHeading {
  color: var(--color-teal-300);
}

.biography p + p {
  margin-top: var(--space-lg);
}

.biographyLayout {
  position: relative;
  padding: clamp(2.75rem, 6vw, 4rem) clamp(1.5rem, 4vw, 3.25rem);
  border-radius: clamp(2rem, 5vw, 3rem);
  background: color-mix(in srgb, var(--surface-base) 96%, white 4%);
  box-shadow: var(--shadow-md);
  overflow: visible;
}

:global(body.dark) .biographyLayout {
  background: color-mix(in srgb, var(--surface-elevated) 90%, rgba(15, 23, 42, 0.6) 10%);
  box-shadow: 0 24px 48px rgba(3, 7, 18, 0.45);
}

.polaroidClusterTop,
.polaroidClusterBottom {
  display: none;
}

@media (min-width: 64rem) {
  .polaroidClusterTop,
  .polaroidClusterBottom {
    display: block;
    position: relative;
    width: 100%;
    margin-inline: auto;
    pointer-events: none;
  }

  .polaroidClusterTop {
    height: clamp(12rem, 22vw, 16rem);
    margin-bottom: 0;
  }

  .polaroidClusterBottom {
    height: clamp(13rem, 24vw, 18rem);
    margin-top: 0;
  }
}

.polaroid {
  display: none;
}

@media (min-width: 64rem) {
  .polaroid {
    display: block;
    position: absolute;
    top: var(--cluster-top);
    left: var(--cluster-left);
    width: clamp(18rem, calc(var(--photo-size) * 2), 36rem);
    aspect-ratio: 9 / 10;
    transform: translate(-50%, -50%) rotate(var(--rotation));
    background: #fff;
    padding: clamp(0.5rem, 1.1vw, 0.85rem) clamp(0.5rem, 1.1vw, 0.85rem) clamp(1.1rem, 2vw, 1.6rem);
    border-radius: 0.65rem;
    box-shadow:
      0 18px 35px rgba(15, 23, 42, 0.22),
      0 8px 18px rgba(15, 23, 42, 0.18);
    z-index: var(--photo-z);
    filter: drop-shadow(0 12px 25px rgba(15, 23, 42, 0.16));
    transition: transform 220ms ease, box-shadow 220ms ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .polaroid:hover {
    transform: translate(-50%, -50%) rotate(calc(var(--rotation) * 0.85));
    box-shadow:
      0 22px 42px rgba(15, 23, 42, 0.26),
      0 10px 20px rgba(15, 23, 42, 0.22);
  }
}

.polaroidImage {
  width: 100%;
  height: 100%;
  display: block;
  border-radius: 0.35rem;
  object-fit: cover;
}

.photoCarousel {
  margin-top: clamp(2rem, 5vw, 3rem);
  display: flex;
  gap: clamp(var(--space-md), 4vw, var(--space-xl));
  overflow-x: auto;
  padding-block: var(--space-sm);
  padding-inline: clamp(var(--space-sm), 3vw, var(--space-md));
  scroll-snap-type: x mandatory;
}

.photoCarousel::-webkit-scrollbar {
  display: none;
}

.polaroidMobile {
  scroll-snap-align: center;
  flex: 0 0 clamp(9.5rem, 45vw, 13rem);
  background: #fff;
  padding: clamp(0.45rem, 1vw, 0.75rem) clamp(0.45rem, 1vw, 0.75rem) clamp(0.9rem, 2vw, 1.3rem);
  border-radius: 0.55rem;
  box-shadow:
    0 12px 28px rgba(15, 23, 42, 0.18),
    0 8px 16px rgba(15, 23, 42, 0.16);
  transform: rotate(var(--rotate));
  aspect-ratio: 9 / 10;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (min-width: 64rem) {
  .photoCarousel {
    display: none;
  }
}

.constantsSection {
  @include utils.section-shell($padding-block: 0);
  margin-block-start: clamp(3.5rem, 6vw, 5rem);
  margin-block-end: 0;
}

.constantsHeading {
  font-size: clamp(1.25rem, 2.5vw, 2rem);
  font-weight: 600;
}

.constantsDivider {
  margin: var(--space-lg) 0;
  height: 3px;
  border-radius: 999px;
  background: var(--color-crimson-500);
}

.constantsGrid {
  display: grid;
  gap: var(--space-lg);
}

.principleCard {
  position: relative;
  padding: var(--space-xl);
  border-radius: 1.5rem;
  background: var(--surface-elevated);
  box-shadow: var(--shadow-md);
}

:global(body.dark) .principleCard {
  background: var(--surface-elevated);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.35);
}

.principleAccent {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  border-radius: 999px 999px 0 0;
  background: var(--color-crimson-500);
}

.principleHeader {
  font-size: clamp(1.05rem, 2vw, 1.25rem);
  font-weight: 600;
  color: var(--color-teal-800);
}

:global(body.dark) .principleHeader {
  color: var(--color-teal-200);
}

.principleBody {
  margin-top: var(--space-md);
  color: var(--text-muted);
  line-height: var(--line-height-base);
}

.closerSection {
  @include utils.section-shell($padding-block: 0);
  margin-block-start: clamp(3.5rem, 6vw, 5rem);
  margin-block-end: 0;
}

.closerCard {
  padding: clamp(1.75rem, 4vw, 3rem);
  border-radius: 1.5rem;
  background: var(--surface-elevated);
  box-shadow: var(--shadow-md);
  font-size: clamp(1rem, 2.3vw, 1.25rem);
  line-height: var(--line-height-base);
}

:where(.closerCard p) {
  margin: 0;
  text-wrap: pretty;
}

:where(.streamNote) {
  margin-top: clamp(1.5rem, 4vw, 2.25rem);
  color: var(--text-muted);
  font-size: var(--type-body-md);
}

.streamNote a {
  color: var(--color-teal-400);
  font-weight: 600;
  text-decoration: none;
}

.streamNote a:hover,
.streamNote a:focus-visible {
  text-decoration: underline;
  color: var(--color-teal-300);
}

:global(body.dark) .closerCard {
  background: var(--surface-elevated);
  box-shadow: 0 8px 28px rgba(0, 0, 0, 0.4);
}

@media (min-width: 768px) {
  .hero {
    padding-bottom: 4.5rem;
  }

  .biographyAside {
    float: right;
    width: min(18.75rem, 38vw);
    margin: -4rem 0 var(--space-xl) clamp(1.5rem, 4vw, 3rem);
  }

  .constantsGrid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
