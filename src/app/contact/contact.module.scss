@use "../../styles/utilities.scss" as utils;

:root {
  /* TODO: Derive this fallback from the moor image palette once automatic sampling is in place. */
  --moor-fade-color: color-mix(
    in srgb,
    var(--color-graphite-900) 92%,
    var(--color-teal-900) 8%
  );
  --surface-glow-teal-strong: color-mix(in srgb, var(--color-teal-400) 24%, transparent);
  --surface-glow-teal-soft: color-mix(in srgb, var(--color-teal-200) 18%, transparent);
  --surface-glow-crimson-soft: color-mix(in srgb, var(--color-crimson-400) 16%, transparent);
  --contact-hero-overlay-scrim: color-mix(in srgb, var(--surface-inverse) 44%, transparent);
  --contact-hero-radial-geometry: 128% 92% at 52% 18%;
  --contact-hero-radial-core: color-mix(
    in srgb,
    var(--surface-inverse) 76%,
    var(--surface-glow-teal-strong) 24%
  );
  --contact-hero-radial-mid: color-mix(
    in srgb,
    var(--surface-inverse) 78%,
    var(--surface-glow-teal-soft) 22%
  );
  --contact-hero-radial-accent: color-mix(
    in srgb,
    var(--surface-inverse) 72%,
    var(--surface-glow-crimson-soft) 28%
  );
  --contact-hero-fade-mid: color-mix(
    in srgb,
    var(--moor-fade-color) 32%,
    transparent
  );
  --contact-hero-fade-strong: color-mix(
    in srgb,
    var(--moor-fade-color) 88%,
    var(--surface-inverse) 12%
  );
}

:global(body.dark) {
  --moor-fade-color: color-mix(in srgb, var(--color-graphite-900) 94%, black 6%);
  --surface-glow-teal-strong: color-mix(in srgb, var(--color-teal-500) 28%, transparent);
  --surface-glow-teal-soft: color-mix(in srgb, var(--color-teal-300) 22%, transparent);
  --surface-glow-crimson-soft: color-mix(in srgb, var(--color-crimson-400) 22%, transparent);
  --contact-hero-overlay-scrim: color-mix(in srgb, var(--surface-inverse) 56%, transparent);
  --contact-hero-radial-geometry: 134% 98% at 50% 22%;
  --contact-hero-radial-core: color-mix(
    in srgb,
    var(--surface-inverse) 68%,
    var(--surface-glow-teal-strong) 32%
  );
  --contact-hero-radial-mid: color-mix(
    in srgb,
    var(--surface-inverse) 70%,
    var(--surface-glow-teal-soft) 30%
  );
  --contact-hero-radial-accent: color-mix(
    in srgb,
    var(--surface-inverse) 64%,
    var(--surface-glow-crimson-soft) 36%
  );
  --contact-hero-fade-mid: color-mix(
    in srgb,
    var(--moor-fade-color) 36%,
    transparent
  );
  --contact-hero-fade-strong: color-mix(
    in srgb,
    var(--moor-fade-color) 82%,
    var(--surface-inverse) 18%
  );
}

.shellContent {
  padding-inline: 0;
}

.contactRoot {
  position: relative;
  min-height: 100vh;
  isolation: isolate;
  background-color: var(--color-graphite-900);
}

.contactRoot::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 0;
  background-color: var(--color-graphite-900);
  background-image: url("https://cdn.networklayer.co.uk/paulalivingstone/images/mooreaglesham.png");
  background-size: cover;
  background-position: center 60%;
  background-repeat: no-repeat;
  background-attachment: fixed;
  opacity: 0;
  animation: contactBackgroundFade 400ms ease-out forwards;
}


.contactRoot::after {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 1;
  pointer-events: none;
  background:
    linear-gradient(
      var(--contact-hero-overlay-scrim),
      var(--contact-hero-overlay-scrim)
    ),
    radial-gradient(
      var(--contact-hero-radial-geometry),
      var(--contact-hero-radial-core) 0%,
      var(--contact-hero-radial-mid) 26%,
      var(--contact-hero-radial-accent) 58%,
      transparent 82%
    ),
    linear-gradient(
      to bottom,
      transparent 60%,
      var(--contact-hero-fade-mid) 78%,
      var(--contact-hero-fade-strong) 94%,
      var(--contact-hero-fade-strong) 100%
    );
}

/*
 * iOS Safari doesn’t support fixed backgrounds on body/large containers.
 * Require both iOS-only WebKit features so we don’t accidentally target
 * desktop Safari builds that also expose -webkit-touch-callout.
 */
@supports (-webkit-touch-callout: none) and (-webkit-overflow-scrolling: touch) {
  .contactRoot::before {
    background-attachment: scroll;
  }
}

.stage {
  position: relative;
  z-index: 2;
  display: grid;
  place-items: center;
  box-sizing: border-box;
  max-width: min(var(--max-content-lg), 100%);
  margin-inline: auto;
  flex: 1;
  padding-block: clamp(6rem, 10vh, 8rem);
  padding-inline: clamp(var(--space-xl), 6vw, var(--space-3xl));
  width: 100%;
}

.belowBlend {
  position: relative;
  z-index: 0;
  min-height: clamp(2rem, 4vh, 3.5rem);
  background: linear-gradient(
    to bottom,
    var(--moor-fade-color) 0%,
    color-mix(in srgb, var(--moor-fade-color) 96%, black 4%) 100%
  );
}

:global(body.dark) :local(.belowBlend) {
  background: linear-gradient(
    to bottom,
    var(--moor-fade-color) 0%,
    color-mix(in srgb, var(--moor-fade-color) 90%, black 10%) 100%
  );
}

.card {
  position: relative;
  z-index: 3;
  max-width: min(var(--max-content-lg), 100%);
  width: 100%;
  backdrop-filter: blur(8px);
  padding: clamp(1.35rem, 2.5vw, 2.1rem);
  opacity: 0;
  transform: translateY(10px);
  animation: contactCardLift 400ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
  overflow: visible;
}

.formContainer {
  @include utils.section-shell(
    $padding-block: clamp(var(--space-lg), 3.5vw, var(--space-2xl)),
    $padding-inline: clamp(var(--space-lg), 3.5vw, var(--space-2xl))
  );
  /* prevent over-padding on tight screens; card already provides cushion */
  @media (max-width: 480px) {
    padding-block: 0;
    padding-inline: clamp(var(--space-md), 3vw, var(--space-lg));
  }
}

.card::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  pointer-events: none;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.18);
}

.header,
.card {
  overflow: visible;
}

.header {
  margin-bottom: var(--space-lg);
}

.hTitle {
  position: relative;
  padding-left: calc(var(--space-lg) + var(--space-2xs));
  letter-spacing: 0.005em;
  padding-bottom: var(--space-sm);
  font-weight: 700;
}

.hTitle::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0.58em;
  width: 7px;
  height: 7px;
  border-radius: 9999px;
  background: var(--color-crimson-500);
  box-shadow: 0 0 0 3px color-mix(in oklab, var(--color-crimson-500) 22%, transparent);
}

.hTitle::after {
  content: "";
  position: absolute;
  left: calc(var(--space-lg) + var(--space-2xs));
  bottom: calc(-1 * (var(--space-xs) + var(--space-2xs)));
  width: clamp(3.8rem, 22vw, 6.8rem);
  height: 0.22rem;
  border-radius: 9999px;
  background: var(--color-crimson-500);
  opacity: 0.9;
}

.preface {
  margin-top: calc(var(--space-xs) + var(--space-2xs));
  color: color-mix(in srgb, var(--text-muted) 65%, var(--text-primary) 35%);
  max-width: 42ch;
  font-size: 0.95rem;
}

:global(body.dark) :local(.preface) {
  color: color-mix(in srgb, var(--text-on-inverse) 80%, var(--text-muted) 20%);
}

.formLabel {
  color: var(--text-muted);
  font-weight: 600;
}

:global(body.dark) :local(.formLabel) {
  color: color-mix(in srgb, var(--text-on-inverse) 80%, var(--text-muted) 20%);
}

.formControl {
  background: var(--surface-field);
  border-color: var(--surface-border);
  color: inherit;
  transition: background 180ms ease, border-color 180ms ease, box-shadow 180ms ease;
}

:global(body.dark) :local(.formControl) {
  background: var(--surface-field-inverse);
  border-color: var(--surface-border-strong);
}

.formControl:focus-visible {
  background: color-mix(in srgb, var(--surface-field) 88%, var(--surface-base) 12%);
}

:global(body.dark) :local(.formControl:focus-visible) {
  background: color-mix(in srgb, var(--surface-field) 65%, var(--surface-field-inverse) 35%);
}

.footerNote {
  margin-top: var(--space-lg);
  font-size: var(--font-size-sm);
  line-height: 1.4;
  color: var(--text-muted);
}

@media (prefers-reduced-motion: reduce) {
  .contactRoot::before {
    animation: none !important;
    opacity: 1 !important;
  }

  .card {
    animation: none !important;
    opacity: 1 !important;
    transform: none !important;
  }

  .formControl {
    transition: none;
  }

  .submitButton {
    transition: none;
    transform: none !important;
    box-shadow: none !important;
  }
}

.actions {
  display: flex;
  justify-content: center;
  margin-top: var(--space-md);
}

.submitButton {
  letter-spacing: 0.02em;
  transition: transform 220ms cubic-bezier(0.16, 1, 0.3, 1),
    box-shadow 220ms cubic-bezier(0.16, 1, 0.3, 1);
}

:global(body.dark) :local(.submitButton) {
  box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--color-teal-200) 35%, transparent);
}

.submitButton:hover:not(:disabled),
.submitButton:focus-visible {
  transform: translateY(-2px) scale(1.01);
  box-shadow: 0 10px 28px color-mix(in oklab, var(--color-teal-500) 18%, transparent);
}

:global(body.dark) :local(.submitButton:hover:not(:disabled)),
:global(body.dark) :local(.submitButton:focus-visible) {
  box-shadow:
    0 10px 28px color-mix(in oklab, var(--color-teal-500) 22%, transparent),
    inset 0 0 0 1px color-mix(in srgb, var(--color-teal-200) 35%, transparent);
}

.submitButton:active:not(:disabled) {
  transform: translateY(0);
}

@keyframes contactBackgroundFade {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes contactCardLift {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}
